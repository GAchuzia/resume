name: Auto Release Resume

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Checkout full history so we see tags
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Verify tag matches VERSION file
      - name: Check VERSION vs Tag
        run: |
          VERSION=$(cat VERSION)
          TAG=${GITHUB_REF#refs/tags/v}
          if [ "$VERSION" != "$TAG" ]; then
            echo "::error::VERSION file ($VERSION) does not match tag ($TAG)"
            exit 1
          fi

      # Generate a LaTeX include for \Version
      - name: Generate version.tex
        run: |
          echo "\\newcommand{\\Version}{$VERSION}" > src/version.tex

      # Build with LaTeX
      - name: Set up TeX Live
        uses: xu-cheng/latex-action@v2
        with:
          root_file: src/resume.tex

      - name: Compile Resume PDF
        run: |
          latexmk -pdf -interaction=nonstopmode \
            -outdir=build src/resume.tex

      # Create GitHub Release
      - name: Create GitHub Release
        id: release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Resume ${{ github.ref_name }}
          body: Automated build of Resume ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload PDF
      - name: Upload PDF asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: build/Resume_GrantAchuzia.pdf
          asset_name: Resume-${{ github.ref_name }}.pdf
          asset_content_type: application/pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
